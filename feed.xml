<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://xanaga.github.io/posts_en/feed.xml" rel="self" type="application/atom+xml" /><link href="https://xanaga.github.io/posts_en/" rel="alternate" type="text/html" /><updated>2022-05-30T12:39:38-05:00</updated><id>https://xanaga.github.io/posts_en/feed.xml</id><title type="html">Deep Diving</title><subtitle>A blog to document my journey through deep learning, computer graphics, VR/AR, BCI...</subtitle><entry><title type="html">Improving quantization by normalizing weights</title><link href="https://xanaga.github.io/posts_en/quantization/efficient_deeplearning/2022/05/30/Improving_quantization_by_normalizing_weights.html" rel="alternate" type="text/html" title="Improving quantization by normalizing weights" /><published>2022-05-30T00:00:00-05:00</published><updated>2022-05-30T00:00:00-05:00</updated><id>https://xanaga.github.io/posts_en/quantization/efficient_deeplearning/2022/05/30/Improving_quantization_by_normalizing_weights</id><author><name></name></author><category term="quantization" /><category term="efficient_deeplearning" /><summary type="html"><![CDATA[While trying to implement the previous post about quantization I faced some difficulties. So it is better to write them down for everyone to know (including a future me). Also, I think the process of solving these issues may apply to other problems. Without further do, time to fix🔨!]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://xanaga.github.io/posts_en/images/detective.png" /><media:content medium="image" url="https://xanaga.github.io/posts_en/images/detective.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Quantizing a Deep Learning Model</title><link href="https://xanaga.github.io/posts_en/quantization/efficient_deeplearning/2022/05/29/Quantizing_A_Deep_Learning_Model_PyTorch.html" rel="alternate" type="text/html" title="Quantizing a Deep Learning Model" /><published>2022-05-29T00:00:00-05:00</published><updated>2022-05-29T00:00:00-05:00</updated><id>https://xanaga.github.io/posts_en/quantization/efficient_deeplearning/2022/05/29/Quantizing_A_Deep_Learning_Model_PyTorch</id><author><name></name></author><category term="quantization" /><category term="efficient_deeplearning" /><summary type="html"><![CDATA[Quantization is one of the most popular techniques when compressing a Neural Network. This post shows how to perform Post Training Quantization with PyTorch. It is based on one of the codelabs from the Efficient Deep Learning book, which uses TensorFlow. If you are more confortable using PyTorch, now you have no excuse, let's quantize🐜!]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://xanaga.github.io/posts_en/images/pixelart_quant.jpg" /><media:content medium="image" url="https://xanaga.github.io/posts_en/images/pixelart_quant.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Knowledge Distillation for Traffic Sign Recognition</title><link href="https://xanaga.github.io/posts_en/knowledgedistillation/fastai/computer%20vision/2022/04/24/Knowledge_Distillation.html" rel="alternate" type="text/html" title="Knowledge Distillation for Traffic Sign Recognition" /><published>2022-04-24T00:00:00-05:00</published><updated>2022-04-24T00:00:00-05:00</updated><id>https://xanaga.github.io/posts_en/knowledgedistillation/fastai/computer%20vision/2022/04/24/Knowledge_Distillation</id><author><name></name></author><category term="knowledgeDistillation" /><category term="fastai" /><category term="computer vision" /><summary type="html"><![CDATA[This is the second part of the post ResNet for Traffic Sign Classification With PyTorch, in which we will try to get close to the results of the previous model but with a smaller one. To do so we will apply the knowledge distillation technique, want to know more? Let's dive in!]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://xanaga.github.io/posts_en/images/compress.jpg" /><media:content medium="image" url="https://xanaga.github.io/posts_en/images/compress.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">ResNet for Traffic Sign Classification With PyTorch</title><link href="https://xanaga.github.io/posts_en/fastai/computer%20vision/traffic%20sign/2022/04/21/ResNet_for_Traffic_Sign_Classification_With_PyTorch.html" rel="alternate" type="text/html" title="ResNet for Traffic Sign Classification With PyTorch" /><published>2022-04-21T00:00:00-05:00</published><updated>2022-04-21T00:00:00-05:00</updated><id>https://xanaga.github.io/posts_en/fastai/computer%20vision/traffic%20sign/2022/04/21/ResNet_for_Traffic_Sign_Classification_With_PyTorch</id><author><name></name></author><category term="fastai" /><category term="computer vision" /><category term="traffic sign" /><summary type="html"><![CDATA[This is my implementation of an existing blog post on Traffic Sign classification. The previous work done by Pavel Surmenok was based on Fastai v1, so I have tried to update it to Fastai v2. If you are interested in computer vision in autonomous driving, and you want to learn more about Fastai this woul be a great starting point!🚗]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://xanaga.github.io/posts_en/images/traffic.png" /><media:content medium="image" url="https://xanaga.github.io/posts_en/images/traffic.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">First Post</title><link href="https://xanaga.github.io/posts_en/general/2022/04/18/first-post.html" rel="alternate" type="text/html" title="First Post" /><published>2022-04-18T00:00:00-05:00</published><updated>2022-04-18T00:00:00-05:00</updated><id>https://xanaga.github.io/posts_en/general/2022/04/18/first-post</id><author><name></name></author><category term="general" /><summary type="html"><![CDATA[First post explaining my plans for this blog.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://xanaga.github.io/posts_en/images/virtual_world.png" /><media:content medium="image" url="https://xanaga.github.io/posts_en/images/virtual_world.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>